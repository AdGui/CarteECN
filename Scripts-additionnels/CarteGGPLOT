#install.packages(c("maptools","maps","RColorBrewer","ggmap","spatstat","rgeos","reshape2","rgdal"))
library("maptools")
library("maps")
library("RColorBrewer")
library("ggmap")
library("spatstat")
library("rgeos")
library("reshape2")
library("rgdal")


#france attribution des couleurs 
canton <- readOGR(paste0(getwd(),"/France"), layer="CANTON", stringsAsFactors=FALSE)

#x <- as.factor(canton$CODE_REG)
#plotclr <- brewer.pal(9,"BrBG")
#dfclr <- data.frame(levels(x), rep(plotclr,length(levels(x))))
#dfclr <- dfclr[1:length(levels(x)),]
#canton$clr <- '0'
#for(i in 1:length(x)){
#  dum <- as.character(dfclr[which(dfclr[,1] == x[i]),2])
#  canton$clr[i] <- dum
#}
#plot(canton, col=canton$clr)


#regroupement des cantons en régions (france)
#region <- unionSpatialPolygons(canton, canton$CODE_REG)

#région sud : montpellier, marseilles, nice
dfsud <- data.frame(CODE_ARR = as.character(canton$CODE_ARR[which(canton$CODE_REG %in% c(94,93,91))]),
                    CODE_CANT = as.character(canton$CODE_CANT[which(canton$CODE_REG %in% c(94,93,91))]),
                    CODE_DEPT = as.character(canton$CODE_DEPT[which(canton$CODE_REG %in% c(94,93,91))]),
                    CODE_REG = as.character(canton$CODE_REG[which(canton$CODE_REG %in% c(94,93,91))]))

#zonage ECN
dfsud$ECN <- '0'
dfsud$ECN[which(dfsud$CODE_DEPT %in% c("06", "2B") | (dfsud$CODE_ARR == "1" & dfsud$CODE_DEPT == "83"))] <- "Nic" 
dfsud$ECN[which(dfsud$CODE_DEPT %in% c("04", "05", "13", "84", "2A") | (dfsud$CODE_ARR %in% c("2","3") & dfsud$CODE_DEPT == "83"))] <- "AixM"
dfsud$ECN[which(dfsud$CODE_REG == "91")] <- "Mon"

#rappatriement dans canton
canton$ECN <- '0'
canton$ECN[which(canton$CODE_REG %in% c(94,93,91))] <- dfsud$ECN 

sud <- unionSpatialPolygons(canton[which(canton$CODE_REG %in% c(94,93,91)),], canton$ECN[which(canton$CODE_REG %in% c(94,93,91))])

#vérification de la carte : Ok
#plot(region)
plot(sud, col=c("#11FFFF","#FF11FF","#FFFF11"))

#région IDF
canton$ECN[which(canton$CODE_REG == "11")] <- "IDF"

#région Nord Ouest
canton$ECN[which(canton$CODE_REG == "25")] <- "Cae"
canton$ECN[which(canton$CODE_REG == "23")] <- "Rou"
canton$ECN[which(canton$CODE_REG == "31")] <- "Lil"
canton$ECN[which(canton$CODE_REG == "22")] <- "Ami"

#région Nord Est
canton$ECN[which(canton$CODE_REG == "26")] <- "Dij"
canton$ECN[which(canton$CODE_REG == "42")] <- "Stra"
canton$ECN[which(canton$CODE_REG == "43")] <- "Bes"
canton$ECN[which(canton$CODE_REG == "41")] <- "Nanc"
canton$ECN[which(canton$CODE_REG == "21")] <- "Rei"

#région Ouest
dfouest <- data.frame(CODE_ARR = as.character(canton$CODE_ARR[which(canton$CODE_REG %in% c(53,52))]),
                    CODE_CANT = as.character(canton$CODE_CANT[which(canton$CODE_REG %in% c(53,52))]),
                    CODE_DEPT = as.character(canton$CODE_DEPT[which(canton$CODE_REG %in% c(53,52))]),
                    CODE_REG = as.character(canton$CODE_REG[which(canton$CODE_REG %in% c(53,52))]))
#zonage ECN
dfouest$ECN <- '0'
dfouest$ECN[which(dfouest$CODE_DEPT %in% c("29") | (dfouest$CODE_ARR %in% c("2","3") & dfouest$CODE_DEPT == "22") | (dfouest$CODE_CANT == "27" & dfouest$CODE_DEPT == "56"))] <- "Bre" 
dfouest$ECN[which(dfouest$CODE_DEPT %in% c("35") | (dfouest$CODE_ARR %in% c("1","4") & dfouest$CODE_DEPT == "22") | (dfouest$CODE_CANT != "27" & dfouest$CODE_DEPT == "56"))] <- "Ren"
dfouest$ECN[which(dfouest$CODE_DEPT %in% c("49", "53", "72"))] <- "Ang"
dfouest$ECN[which(dfouest$CODE_DEPT %in% c("85", "44"))] <- "Nant"

#rappatriement dans canton
canton$ECN[which(canton$CODE_REG %in% c(53,52))] <- dfouest$ECN 

ouest <- unionSpatialPolygons(canton[which(canton$CODE_REG %in% c(53,52)),], canton$ECN[which(canton$CODE_REG %in% c(53,52))])

canton$ECN[which(canton$CODE_REG == "24")] <- "Tour"
canton$ECN[which(canton$CODE_REG == "54")] <- "Poi"

#vérification de la carte : Ok
#plot(region)
plot(ouest, col=c("#11FFFF","#FF11FF","#FFFF11","#555555"))

#Région Rhône-Alpes
dfRA <- data.frame(CODE_ARR = as.character(canton$CODE_ARR[which(canton$CODE_REG %in% c(82))]),
                      CODE_CANT = as.character(canton$CODE_CANT[which(canton$CODE_REG %in% c(82))]),
                      CODE_DEPT = as.character(canton$CODE_DEPT[which(canton$CODE_REG %in% c(82))]),
                      CODE_REG = as.character(canton$CODE_REG[which(canton$CODE_REG %in% c(82))]))
#zonage ECN
dfRA$ECN <- '0'
dfRA$ECN[which(dfRA$CODE_DEPT %in% c("73") | 
                   (!(dfRA$CODE_ARR %in% c("3")) & dfRA$CODE_DEPT == "38") | 
                   (dfRA$CODE_ARR != "3") & dfRA$CODE_DEPT == "74")] <- "Gre" 
dfRA$ECN[which(dfRA$CODE_DEPT %in% c("01","07","26","69") |
                 ((dfRA$CODE_ARR %in% c("3")) & dfRA$CODE_DEPT == "38") |
                 (dfRA$CODE_ARR == "3") & dfRA$CODE_DEPT == "74" |
                 (dfRA$CODE_DEPT %in% c("42") & (dfRA$CODE_CANT %in% c("32","14","05","01","16","34","98"))))] <- "Ly" 
dfRA$ECN[which(dfRA$CODE_DEPT %in% c("42") & (!(dfRA$CODE_CANT %in% c("32","14","05","01","16","34","98"))))] <- "StE"

#rappatriement dans canton
canton$ECN[which(canton$CODE_REG %in% c(82))] <- dfRA$ECN 

RA <- unionSpatialPolygons(canton[which(canton$CODE_REG %in% c(82)),], canton$ECN[which(canton$CODE_REG %in% c(82))])

#vérification de la carte : Ok
#plot(region)
plot(RA, col=c("#11FFFF","#FF11FF","#FFFF11"))

#région Sud Ouest
canton$ECN[which(canton$CODE_REG == "72")] <- "Bord"
canton$ECN[which(canton$CODE_REG == "74")] <- "Lim"
canton$ECN[which(canton$CODE_REG == "83")] <- "CleF"
canton$ECN[which(canton$CODE_REG == "73")] <- "Toul"
#canton$ECN[which(canton$CODE_REG == "04")] <- "OceI"
#canton$ECN[which(canton$CODE_REG == "03")] <- "AntG"

#fusion métropolitaine
ECNmetro <- unionSpatialPolygons(canton, canton$ECN)

#conversion format ggplot
france <- fortify(ECNmetro)

#création df correspondance données - région + injection des données dans la carte
dfcol <- data.frame(reg = levels(as.factor(france$id)), data= rnorm(length(levels(as.factor(france$id))), 3000, 1000))
france$col <- 0
for(i in 1:length(dfcol$reg)){
  france$col[which(france$id == dfcol$reg[i])] <- dfcol$data[which(dfcol$reg == dfcol$reg[i])] 
}

#modification du thème
theme_opts <- list(theme(panel.grid.minor = element_blank(),
                         panel.grid.major = element_blank(),
                         panel.background = element_blank(),
                         plot.background = element_rect(fill="#e6e8ed"),
                         panel.border = element_blank(),
                         axis.line = element_blank(),
                         axis.text.x = element_blank(),
                         axis.text.y = element_blank(),
                         axis.ticks = element_blank(),
                         axis.title.x = element_blank(),
                         axis.title.y = element_blank(),
                         plot.title = element_text(size=22)))

#carte finale
ggplot(france, aes(x=long, y=lat, fill=col, group=group)) +
  geom_polygon() +
  scale_fill_gradient2(name = "Rangs",low = "#CC0000",mid = "#FFFFFF",high = "#006600") +
  geom_path(color="white", size=0.3)+ 
  labs(title="Classement par subdivision") + 
  theme_opts


#DOM-TOM
#Mayotte
mayotte <- readOGR(paste0(getwd(),"/Mayotte"), layer="DEPARTEMENT", stringsAsFactors=FALSE)
fmayotte <- fortify(mayotte)
fmayotte$id <- 'OceI'
fmayotte$col <- 5000
summary(france)
coef <- 4
fmayotte$long <- fmayotte$long*coef
fmayotte$lat <- fmayotte$lat*coef
fmayotte$long <- fmayotte$long - (max(fmayotte$long)-min(france$long)) + 0.2*(max(france$long)-min(france$long))
fmayotte$lat <- fmayotte$lat - (max(fmayotte$lat)-min(france$lat)) - 0.05*(max(france$lat)-min(france$lat))

#Réunion
reunion <- readOGR(paste0(getwd(),"/Reunion"), layer="DEPARTEMENT", stringsAsFactors=FALSE)
freunion <- fortify(reunion)
freunion$id <- 'OceI'
freunion$col <- 5000
summary(france)
coef <- 2.25
freunion$long <- freunion$long*coef
freunion$lat <- freunion$lat*coef
freunion$long <- freunion$long - (max(freunion$long)-min(france$long)) + 0.375*(max(france$long)-min(france$long))
freunion$lat <- freunion$lat - (max(freunion$lat)-min(france$lat)) - 0.07*(max(france$lat)-min(france$lat))

#Martinique
martinique <- readOGR(paste0(getwd(),"/martinique"), layer="DEPARTEMENT", stringsAsFactors=FALSE)
fmartinique <- fortify(martinique)
fmartinique$id <- 'AntG'
fmartinique$col <- 6000
summary(france)
coef <- 2.5
fmartinique$long <- fmartinique$long*coef
fmartinique$lat <- fmartinique$lat*coef
fmartinique$long <- fmartinique$long - (max(fmartinique$long)-min(france$long)) + 0.525*(max(france$long)-min(france$long))
fmartinique$lat <- fmartinique$lat - (max(fmartinique$lat)-min(france$lat)) - 0.07*(max(france$lat)-min(france$lat))

#guyane
guyane <- readOGR(paste0(getwd(),"/guyane"), layer="DEPARTEMENT", stringsAsFactors=FALSE)
fguyane <- fortify(guyane)
fguyane$id <- 'AntG'
fguyane$col <- 6000
summary(france)
coef <- 0.325
fguyane$long <- fguyane$long*coef
fguyane$lat <- fguyane$lat*coef
fguyane$long <- fguyane$long - (max(fguyane$long)-min(france$long)) + 0.675*(max(france$long)-min(france$long))
fguyane$lat <- fguyane$lat - (max(fguyane$lat)-min(france$lat)) - 0.07*(max(france$lat)-min(france$lat))


#guadeloupe
guadeloupe <- readOGR(paste0(getwd(),"/guadeloupe"), layer="DEPARTEMENT", stringsAsFactors=FALSE)
fguadeloupe <- fortify(guadeloupe)
fguadeloupe$id <- 'AntG'
fguadeloupe$col <- 6000
summary(france)
coef <- 1.9
fguadeloupe$long <- fguadeloupe$long*coef
fguadeloupe$lat <- fguadeloupe$lat*coef
fguadeloupe$long <- fguadeloupe$long - (max(fguadeloupe$long)-min(france$long)) + 0.87*(max(france$long)-min(france$long))
fguadeloupe$lat <- fguadeloupe$lat - (max(fguadeloupe$lat)-min(france$lat)) - 0.07*(max(france$lat)-min(france$lat))

coef1 <- 10000
coef2 <- 10000
dfOcI <- data.frame(long=c(max(freunion$long)+coef1,max(freunion$long)+coef1,min(fmayotte$long)-coef1,min(fmayotte$long)-coef1),
                    lat = c(max(fmayotte$lat)+coef2,min(fmayotte$lat)-coef2*2,min(fmayotte$lat)-coef2*2,max(fmayotte$lat)+coef2))

coef1 <- 10000
coef2 <- 30000
dfAnG <- data.frame(long=c(max(fguadeloupe$long)+coef1,max(fguadeloupe$long)+coef1,min(fmartinique$long)-coef1,min(fmartinique$long)-coef1),
                    lat = c(max(fmartinique$lat)+coef2,min(fmartinique$lat)-coef2,min(fmartinique$lat)-coef2,max(fmartinique$lat)+coef2))

ggplot() +
  geom_polygon(data=france, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fmayotte, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=freunion, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fmartinique, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fguadeloupe, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fguyane, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=dfOcI, aes(x=long, y=lat), alpha=0, col="black")+
  geom_polygon(data=dfAnG, aes(x=long, y=lat), alpha=0, col="black")+
  scale_fill_gradient2(name = "Rangs",low = "#CC0000",mid = "#FFFFFF",high = "#006600") +
  geom_path(color="white", size=0.3)+ 
  labs(title="Classement par subdivision") + 
  theme_opts



Offre_vec_ville <- c(015,020,018,016,017,019,022,024,023,021,038,025,026,027,029,032,028,030,033,031,035,034,036,037,042,040,039,041,000)
Offre_vec_spe <- c(11,4,3,5,9,6,2,10,7,12,13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 0)
xlab_ville <- c("AixM","Ami","Ang","AntG","Bes","Bord","Bre","Cae","CleF","Dij","Gre","IDF","Lil","Lim","Ly","Mon","Nanc","Nant","Nic","OceI","Poi","Rei","Ren","Rou","StE","Stra","Toul","Tour")
indic_ville <- c(034,021,028,041,016,037,029,022,038,017,025,015,023,039,026,035,018,030,036,042,031,019,032,024,027,020,040,033)
xlab_spe <- c("AR","Bi","GyM","GyO","MT","MG","Psy","Ped","SP","ChOr","ChG","ChN","Opht","ORL","An","Ca","De","En","Ga","GM","He","MI","MN","MPR","Neu","Nep","Onc","Pne","Rad","Rhu")
#xlab_spe.2 <- c("AR","Bi","GyM","GyO","MT","MG","Psy","Ped","SP","ChOr","ChG","ChN","Opht","ORL","An","Ca","De","En","Ga","GM","He","MI","MN","MPR","Neu","Nep","Onc","Pne","Rad","Rhu")
xlab_spe.2 <- c("AR","Bi","GyM","GyO","MT","MG","Ped","Psy","SP","ChG","ChOr","ChN","Opht","ORL","An","Ca","De","En","Ga","GM","He","MI","MN","MPR","Nep","Neu","Onc","Pne","Rad","Rhu")
indic_spe <- c(004,003,005,009,006,011,010,002,007,032,028,029,030,031,012,013,014,015,016,017,018,019,020,021,023,022,024,025,026,027)

vec.spe <- c()
vec.sub <- c()

con <- file("./data/ECN2013.csv")
ECN_data <- read.csv(con, sep=",")
for(i in 1:length(ECN_data[,1])){
  vec.sub[i] <- indic_ville[which(xlab_ville==ECN_data[i,9])]
  vec.spe[i] <- indic_spe[which(xlab_spe==ECN_data[i,10])]
}
vec.sub <- as.character(vec.sub)
vec.spe <- as.character(vec.spe)
for(i in 1:length(vec.sub)){
  if(nchar(vec.sub[i])==2){
    vec.sub[i] <- paste0("0",vec.sub[i])
  }
  if(nchar(vec.sub[i])==1){
    vec.sub[i] <- paste0("00",vec.sub[i])
  }
}
for(i in 1:length(vec.spe)){
  if(nchar(vec.spe[i])==2){
    vec.spe[i] <- paste0("0",vec.spe[i])
  }
  if(nchar(vec.spe[i])==1){
    vec.spe[i] <- paste0("00",vec.spe[i])
  }
}        
ECN_data <- data.frame("sexe"=ECN_data[,4],"ddm"=ECN_data[,6],"dda"=ECN_data[,7],"Etudiant"=ECN_data[,8],"v5"=1,"v6"=1,"Subdivision"=ECN_data[,9],"Discipline"=ECN_data[,10],"v9"=1,"v10"=1,"SubDis"=paste0("[",vec.sub,vec.spe,"]"))

colnames(ECN_data)[9] <-"Désir (non officiel)"

ECN_data.dum <- ECN_data

ECN_data.dum[,7] <- as.character(ECN_data.dum[,7])
ECN_data.dum[,7] <- as.factor(ECN_data.dum[,7])
ECN_data.dum[,4] <- as.numeric(ECN_data.dum[,4])
df_corr_ville <- data.frame(levels(ECN_data.dum[,7]),xlab_ville)
ECN_data.dum[,7] <- mapvalues(ECN_data.dum[,7],from=levels(ECN_data.dum[,7]),to=xlab_ville)
df_order <- ddply(ECN_data.dum, .(Subdivision), summarize, 
                  median=median(Etudiant,na.rm=T),
                  mean=mean(Etudiant,na.rm=T),
                  max=max(Etudiant,na.rm=T),
                  min=min(Etudiant,na.rm=T),
                  TQuart=quantile(Etudiant, 0.75,na.rm=T),
                  PQuart=quantile(Etudiant, 0.25,na.rm=T)
)

france$col <- 0
for(i in 1:length(df_order$Subdivision)){
  france$col[which(france$id == df_order$Subdivision[i])] <- df_order$PQ[which(df_order$Subdivision == df_order$Subdivision[i])] 
}
france$col[which(france$id == '0')] <- df_order$PQ[which(df_order$Subdivision == 'Rei')] 
fmayotte$col <- df_order$PQ[which(df_order$Subdivision == "OceI")] 
freunion$col <- df_order$PQ[which(df_order$Subdivision == "OceI")] 
fguadeloupe$col <- df_order$PQ[which(df_order$Subdivision == "AntG")] 
fguyane$col <- df_order$PQ[which(df_order$Subdivision == "AntG")] 
fmartinique$col <- df_order$PQ[which(df_order$Subdivision == "AntG")] 

ggplot() +
  geom_polygon(data=france, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fmayotte, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=freunion, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fmartinique, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fguadeloupe, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=fguyane, aes(x=long, y=lat, fill=col, group=group), col="white") +
  geom_polygon(data=dfOcI, aes(x=long, y=lat), alpha=0, col="black")+
  geom_polygon(data=dfAnG, aes(x=long, y=lat), alpha=0, col="black")+
  scale_fill_gradient2(name = "Rangs",low = "#006600",mid = "#FFFFFF",high = "#CC0000",midpoint = quantile(ECN_data.dum$Etudiant,0.25)) +
  geom_path(color="white", size=0.3)+ 
  labs(title="Classement par subdivision") + 
  theme_opts


## Test fusion AntG et OceI : faisable - attention à l'ID des polygones
mayotte <- spTransform(mayotte, CRS("+init=epsg:4326"))
mayotte@polygons[[1]]@ID <- 'Mayotte'
row.names(mayotte@data) <- 'Mayotte'
reunion <- spTransform(reunion, CRS("+init=epsg:4326"))
reunion@polygons[[1]]@ID <- 'La Reunion'
row.names(reunion@data) <- 'La Reunion'
OceI <- spRbind(mayotte, reunion)


